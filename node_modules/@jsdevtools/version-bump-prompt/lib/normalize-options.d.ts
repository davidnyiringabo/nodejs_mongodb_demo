/// <reference types="node" />
import { ReleaseType } from "./release-type";
import { VersionBumpOptions } from "./types/version-bump-options";
interface Interface {
    input?: NodeJS.ReadableStream | NodeJS.ReadStream | false;
    output?: NodeJS.WritableStream | NodeJS.WriteStream | false;
    [key: string]: unknown;
}
/**
 * A specific version release.
 */
export interface VersionRelease {
    type: "version";
    version: string;
}
/**
 * Prompt the user for the release number.
 */
export interface PromptRelease {
    type: "prompt";
    preid: string;
}
/**
 * A bump release, relative to the current version number.
 */
export interface BumpRelease {
    type: ReleaseType;
    preid: string;
}
/**
 * One of the possible Release types.
 */
export declare type Release = VersionRelease | PromptRelease | BumpRelease;
/**
 * Normalized and sanitized options
 */
export interface NormalizedOptions {
    release: Release;
    commit?: {
        message: string;
        noVerify: boolean;
        all: boolean;
    };
    tag?: {
        name: string;
    };
    push: boolean;
    files: string[];
    cwd: string;
    interface: Interface;
    ignoreScripts: boolean;
}
/**
 * Converts raw VersionBumpOptions to a normalized and sanitized Options object.
 */
export declare function normalizeOptions(raw: VersionBumpOptions): Promise<NormalizedOptions>;
export {};
