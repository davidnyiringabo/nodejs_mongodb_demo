"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Operation = void 0;
const normalize_options_1 = require("./normalize-options");
/**
 * All of the inputs, outputs, and state of a single `versionBump()` call.
 */
class Operation {
    /**
     * Private constructor.  Use the `Operation.start()` static method instead.
     */
    constructor(options, progress) {
        /**
         * The current state of the operation.
         */
        this.state = {
            release: undefined,
            oldVersion: "",
            oldVersionSource: "",
            newVersion: "",
            commitMessage: "",
            tagName: "",
            updatedFiles: [],
            skippedFiles: [],
        };
        this.options = options;
        this._progress = progress;
    }
    /**
     * The results of the operation.
     */
    get results() {
        let options = this.options;
        let state = this.state;
        return {
            release: state.release,
            oldVersion: state.oldVersion,
            newVersion: state.newVersion,
            commit: options.commit ? state.commitMessage : false,
            tag: options.tag ? state.tagName : false,
            updatedFiles: state.updatedFiles.slice(),
            skippedFiles: state.skippedFiles.slice(),
        };
    }
    /**
     * Starts a new `versionBump()` operation.
     */
    static async start(input) {
        // Validate and normalize the options
        let options = await normalize_options_1.normalizeOptions(input);
        return new Operation(options, input.progress);
    }
    /**
     * Updates the operation state and results, and reports the updated progress to the user.
     */
    update({ event, script, ...newState }) {
        // Update the operation state
        Object.assign(this.state, newState);
        if (event && this._progress) {
            // Report the progress to the user
            this._progress({ event, script, ...this.results });
        }
        return this;
    }
}
exports.Operation = Operation;
//# sourceMappingURL=operation.js.map